diff --git a/node_modules/react-native-navigation/lib/android/app/build.gradle b/node_modules/react-native-navigation/lib/android/app/build.gradle
index 9d5a0fd..50d7b54 100644
--- a/node_modules/react-native-navigation/lib/android/app/build.gradle
+++ b/node_modules/react-native-navigation/lib/android/app/build.gradle
@@ -62,11 +62,11 @@ android {
         }
     }
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility JavaVersion.VERSION_17
+        targetCompatibility JavaVersion.VERSION_17
     }
     kotlinOptions {
-        jvmTarget = JavaVersion.VERSION_1_8
+        jvmTarget = JavaVersion.VERSION_17
     }
 
     flavorDimensions "RNN.reactNativeVersion"
diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java
index 4cc09eb..a80c522 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java
@@ -66,15 +66,19 @@ public class NavigationModule extends ReactContextBaseJavaModule {
 
             @Override
             public void onHostResume() {
-                eventEmitter = new EventEmitter(reactContext);
-                navigator().setEventEmitter(eventEmitter);
-                layoutFactory.init(
-                        activity(),
-                        eventEmitter,
-                        navigator().getChildRegistry(),
-                        ((NavigationApplication) activity().getApplication()).getExternalComponents()
-                );
-                UiUtils.runOnMainThread(() -> navigator().onHostResume());
+                if(activity() != null){
+                    eventEmitter = new EventEmitter(reactContext);
+                    navigator().setEventEmitter(eventEmitter);
+                    layoutFactory.init(
+                            activity(),
+                            eventEmitter,
+                            navigator().getChildRegistry(),
+                            ((NavigationApplication) activity().getApplication()).getExternalComponents()
+                    );
+                }
+                UiUtils.runOnMainThread(() -> {
+                    if (activity() != null) navigator().onHostResume();
+                });
             }
         });
     }
diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/SystemUiUtils.kt b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/SystemUiUtils.kt
index 89665d1..0682c9c 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/SystemUiUtils.kt
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/SystemUiUtils.kt
@@ -25,7 +25,7 @@ object SystemUiUtils {
 
     @JvmStatic
     fun getStatusBarHeight(activity: Activity?): Int {
-        val res = if (statusBarHeight > 0) {
+        val res = if (statusBarHeight > -1) {
             statusBarHeight
         } else {
             statusBarHeight = activity?.let {
diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/component/ComponentViewController.java b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/component/ComponentViewController.java
index a9e2c53..6a8858e 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/component/ComponentViewController.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/component/ComponentViewController.java
@@ -4,7 +4,6 @@ import android.app.Activity;
 import android.content.res.Configuration;
 import android.view.View;
 
-import com.reactnativenavigation.utils.LogKt;
 import com.reactnativenavigation.viewcontrollers.viewcontroller.ScrollEventListener;
 import com.reactnativenavigation.options.Options;
 import com.reactnativenavigation.viewcontrollers.viewcontroller.Presenter;
@@ -12,7 +11,6 @@ import com.reactnativenavigation.utils.SystemUiUtils;
 import com.reactnativenavigation.viewcontrollers.viewcontroller.ReactViewCreator;
 import com.reactnativenavigation.viewcontrollers.child.ChildController;
 import com.reactnativenavigation.viewcontrollers.child.ChildControllersRegistry;
-import com.reactnativenavigation.viewcontrollers.viewcontroller.ViewController;
 import com.reactnativenavigation.views.component.ComponentLayout;
 
 import androidx.annotation.NonNull;
@@ -34,13 +32,13 @@ public class ComponentViewController extends ChildController<ComponentLayout> {
     private VisibilityState lastVisibilityState = VisibilityState.Disappear;
 
     public ComponentViewController(final Activity activity,
-            final ChildControllersRegistry childRegistry,
-            final String id,
-            final String componentName,
-            final ReactViewCreator viewCreator,
-            final Options initialOptions,
-            final Presenter presenter,
-            final ComponentPresenter componentPresenter) {
+                                   final ChildControllersRegistry childRegistry,
+                                   final String id,
+                                   final String componentName,
+                                   final ReactViewCreator viewCreator,
+                                   final Options initialOptions,
+                                   final Presenter presenter,
+                                   final ComponentPresenter componentPresenter) {
         super(activity, childRegistry, id, presenter, initialOptions);
         this.componentName = componentName;
         this.viewCreator = viewCreator;
@@ -155,13 +153,13 @@ public class ComponentViewController extends ChildController<ComponentLayout> {
 
     @Override
     protected WindowInsetsCompat onApplyWindowInsets(View view, WindowInsetsCompat insets) {
+        SystemUiUtils.saveStatusBarHeight(insets.getInsetsIgnoringVisibility(WindowInsetsCompat.Type.systemBars()).top);
         final Insets systemBarsInsets = insets.getInsets(WindowInsetsCompat.Type.systemBars());
         int systemWindowInsetTop = insets.getInsets(WindowInsetsCompat.Type.statusBars()).top +
                 insets.getInsets(WindowInsetsCompat.Type.navigationBars()).top -
                 systemBarsInsets.top;
-        int systemWindowInsetBottom = insets.getInsets(WindowInsetsCompat.Type.ime()).bottom +
-                insets.getInsets(WindowInsetsCompat.Type.navigationBars()).bottom -
-                systemBarsInsets.bottom;
+        int systemWindowInsetBottom = insets.getInsets(
+                WindowInsetsCompat.Type.navigationBars()).bottom - systemBarsInsets.bottom;
 
         WindowInsetsCompat finalInsets = new WindowInsetsCompat.Builder()
                 .setInsets(WindowInsetsCompat.Type.systemBars() | WindowInsetsCompat.Type.ime(),
diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/stack/topbar/button/ButtonPresenter.kt b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/stack/topbar/button/ButtonPresenter.kt
index 93b3b8e..ce2919c 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/stack/topbar/button/ButtonPresenter.kt
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/stack/topbar/button/ButtonPresenter.kt
@@ -194,8 +194,8 @@ open class ButtonPresenter(private val context: Context, private val button: But
 
                 class WixAccessibilityDelegateCompat: AccessibilityDelegateCompat(){
                     override fun onInitializeAccessibilityNodeInfo(
-                        host: View?,
-                        info: AccessibilityNodeInfoCompat?
+                        host: View,
+                        info: AccessibilityNodeInfoCompat
                     ) {
                         super.onInitializeAccessibilityNodeInfo(host, info)
 
