// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component should have TouchableNativeFeedback on android  1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "#0030CF",
      "borderColor": "transparent",
      "borderRadius": 40.17857142857143,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 117.85714285714285,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 15,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  />
</View>
`;

exports[`Button Component should render with icon  1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "#0030CF",
      "borderColor": "transparent",
      "borderRadius": 40.17857142857143,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 117.85714285714285,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 15,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Image
      resizeMode="contain"
      source={
        {
          "uri": "IconChevronDown",
        }
      }
      style={
        [
          {
            "height": 31.428571428571427,
            "width": 31.428571428571427,
          },
          [
            {
              "marginRight": 3,
              "tintColor": "#ffffff",
            },
            undefined,
            undefined,
            undefined,
          ],
        ]
      }
    />
  </View>
</View>
`;

exports[`Button Component should render with isDisabled 1`] = `
<View
  style={
    [
      {
        "alignSelf": "stretch",
        "backgroundColor": "#0030CF",
        "borderColor": "transparent",
        "borderRadius": 40.17857142857143,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 117.85714285714285,
        "justifyContent": "center",
        "paddingHorizontal": 15,
      },
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      {
        "opacity": 0.4,
      },
      undefined,
    ]
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  />
</View>
`;

exports[`Button Component should render with label 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "#0030CF",
      "borderColor": "transparent",
      "borderRadius": 40.17857142857143,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 117.85714285714285,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 15,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      adjustsFontSizeToFit={false}
      allowFontScaling={false}
      numberOfLines={2}
      style={
        [
          {
            "color": "#ffffff",
            "fontFamily": "ProximaNova-Bold",
            "fontSize": 35.357142857142854,
            "paddingHorizontal": 5,
            "textAlign": "center",
          },
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`Button Component should render with loading 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "#0030CF",
      "borderColor": "transparent",
      "borderRadius": 40.17857142857143,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 117.85714285714285,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 15,
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="#ffffff"
    size="small"
    style={
      {
        "alignSelf": "center",
        "flex": 1,
      }
    }
  />
</View>
`;

exports[`Button Component should render without issues 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "#0030CF",
      "borderColor": "transparent",
      "borderRadius": 40.17857142857143,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 117.85714285714285,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 15,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  />
</View>
`;
