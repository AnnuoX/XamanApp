/* eslint-disable spellcheck/spell-checker */
/* eslint-disable max-len */

import Localize from '@locale';

import { MutationsMixin } from '@common/libs/ledger/mixin';

import { Import, ImportInfo } from '../Import';
import importTemplate from './fixtures/ImportTx.json';

jest.mock('@services/NetworkService');

describe('Import ', () => {
    describe('Class', () => {
        it('Should set tx type if not set', () => {
            const instance = new Import();
            expect(instance.TransactionType).toBe('Import');
            expect(instance.Type).toBe('Import');
        });

        it('Should return right parsed values', () => {
            const { tx, meta }: any = importTemplate.RegularKey;
            const instance = new Import(tx, meta);

            expect(instance.TransactionType).toBe('Import');
            expect(instance.Type).toBe('Import');

            expect(instance.Blob).toBe(

            );
            expect(instance.Issuer).toBe('rrrrrrrrrrrrrrrrrrrrrholvtp');
        });
    });

    describe('Info', () => {
        const MixedImport = MutationsMixin(Import);
        const { tx, meta }: any = importTemplate.RegularKey;
        const instance = new MixedImport(tx, meta);
        const info = new ImportInfo(instance, {} as any);

        describe('generateDescription()', () => {
            it('should return the expected description', () => {
                const expectedDescription = `This is an Import transaction${'\n'}The issuer address set to rrrrrrrrrrrrrrrrrrrrrholvtp`;
                expect(info.generateDescription()).toEqual(expectedDescription);
            });
        });

        describe('getEventsLabel()', () => {
            it('should return the expected label', () => {
                expect(info.getEventsLabel()).toEqual(Localize.t('events.import'));
            });
        });

        describe('getParticipants()', () => {
            it('should return the expected participants', () => {
                expect(info.getParticipants()).toStrictEqual({
                    start: { address: 'rG1QQv2nh2gr7RCZ1P8YYcBUKCCN633jCn', tag: undefined },
                });
            });
        });

        describe('getMonetaryDetails()', () => {
            it('should return the expected monetary details', () => {
                // TODO: check me
                expect(info.getMonetaryDetails()).toStrictEqual({
                    mutate: {
                        sent: undefined,
                        received: { issuer: undefined, currency: 'XRP', value: '12', action: 1 },
                    },
                    factor: undefined,
                });
            });
        });
    });

    describe('Validation', () => {});
});
